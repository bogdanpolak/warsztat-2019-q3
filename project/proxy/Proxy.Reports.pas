unit Proxy.Reports;

interface

// Generated by Proxy Generator for FireDAC at 2019-09-09 12:21
uses
  Data.DB,
  Data.DataProxy,
  System.SysUtils,
  System.Classes,
  FireDAC.Comp.Client;

type
  TReportProxy = class(TDatasetProxy)
  private
    FReaderId: TIntegerField;
    FISBN: TWideStringField;
    FRating: TIntegerField;
    FOppinion: TWideStringField;
    FReported: TDateTimeField;
  protected
    procedure ConnectFields; override;
  public
    constructor CreateMock (AOwner: TComponent);
    class function CreateMockTable(AOwner: TComponent): TFDMemTable;
    // ---
    property ReaderId: TIntegerField read FReaderId;
    property ISBN: TWideStringField read FISBN;
    property Rating: TIntegerField read FRating;
    property Oppinion: TWideStringField read FOppinion;
    property Reported: TDateTimeField read FReported;
  end;

implementation

procedure TReportProxy.ConnectFields;
const
  ExpectedFieldCount = 5;
begin
  FReaderId := FDataSet.FieldByName('ReaderId') as TIntegerField;
  FISBN := FDataSet.FieldByName('ISBN') as TWideStringField;
  FRating := FDataSet.FieldByName('Rating') as TIntegerField;
  FOppinion := FDataSet.FieldByName('Oppinion') as TWideStringField;
  FReported := FDataSet.FieldByName('Reported') as TDateTimeField;
  Assert(FDataSet.Fields.Count = ExpectedFieldCount);
end;

constructor TReportProxy.CreateMock(AOwner: TComponent);
begin
  inherited;
  Self.FDataSet := TFDMemTable.Create(AOwner);
  with Self.FDataSet as TFDMemTable do
  begin
    FieldDefs.Add('ReaderId', ftInteger);
    FieldDefs.Add('ISBN', ftWideString, 20);
    FieldDefs.Add('Rating', ftInteger);
    FieldDefs.Add('Oppinion', ftWideString, 2000);
    FieldDefs.Add('Reported', ftDateTime);
    CreateDataSet;
  end;
end;

class function TReportProxy.CreateMockTable(AOwner: TComponent): TFDMemTable;
var
  ds: TFDMemTable;
begin
  ds := TFDMemTable.Create(AOwner);
  with ds do
  begin
    FieldDefs.Add('ReaderId', ftInteger);
    FieldDefs.Add('ISBN', ftWideString, 20);
    FieldDefs.Add('Rating', ftInteger);
    FieldDefs.Add('Oppinion', ftWideString, 2000);
    FieldDefs.Add('Reported', ftDateTime);
    CreateDataSet;
  end;
{$REGION 'Append data to MemTable: Report'}
  with ds do
  begin
    Append;
    FieldByName('ReaderId').Value := 3;
    FieldByName('ISBN').Value := '978-1788621304';
    FieldByName('Rating').Value := 10;
    FieldByName('Oppinion').Value :=
      'Great! There are lots of an easy to implement recepies. Very useful ' +
      'for the future. I recommend it to an every Delphi developer.';
    FieldByName('Reported').Value := EncodeDate(2018, 7, 27) +
      EncodeTime(20, 30, 49, 0);
    Post;
  end;
  with ds do
  begin
    Append;
    FieldByName('ReaderId').Value := 24;
    FieldByName('ISBN').Value := '978-1941266038';
    FieldByName('Rating').Value := 9;
    FieldByName('Oppinion').Value :=
      'This must-read book highlights the importance writung of clean and r' +
      'esposible code in Delphi.';
    FieldByName('Reported').Value := EncodeDate(2018, 8, 15) +
      EncodeTime(22, 12, 31, 0);
    Post;
  end;
  with ds do
  begin
    Append;
    FieldByName('ReaderId').Value := 25;
    FieldByName('ISBN').Value := '978-1786466150';
    FieldByName('Rating').Value := 8;
    FieldByName('Oppinion').Value :=
      'This is the key to making things done and getting the results.';
    FieldByName('Reported').Value := EncodeDate(2018, 8, 23) +
      EncodeTime(12, 2, 17, 0);
    Post;
  end;
  with ds do
  begin
    Append;
    FieldByName('ReaderId').Value := 26;
    FieldByName('ISBN').Value := '978-1786460165';
    FieldByName('Rating').Value := 7;
    FieldByName('Oppinion').Value :=
      'The tools and insights author shares in his book have been instrumen' +
      'tal in elevating my development knowledge.';
    FieldByName('Reported').Value := EncodeDate(2018, 9, 2) +
      EncodeTime(21, 55, 43, 0);
    Post;
  end;
  with ds do
  begin
    Append;
    FieldByName('ReaderId').Value := 27;
    FieldByName('ISBN').Value := '978-1546391272';
    FieldByName('Rating').Value := 8;
    FieldByName('Oppinion').Value :=
      'It’s required reading for any developer looking to play with FireDAC';
    FieldByName('Reported').Value := EncodeDate(2018, 9, 15) +
      EncodeTime(0, 32, 31, 0);
    Post;
  end;
  with ds do
  begin
    Append;
    FieldByName('ReaderId').Value := 1;
    FieldByName('ISBN').Value := '978-1941266229';
    FieldByName('Rating').Value := 9;
    FieldByName('Oppinion').Value :=
      'Nick''s perspective on developing modern Delphi code and his methodo' +
      'logies have really made a difference in our team.';
    FieldByName('Reported').Value := EncodeDate(2018, 9, 20) +
      EncodeTime(17, 39, 49, 0);
    Post;
  end;
  with ds do
  begin
    Append;
    FieldByName('ReaderId').Value := 28;
    FieldByName('ISBN').Value := '978-1788621304';
    FieldByName('Rating').Value := 10;
    FieldByName('Oppinion').Value :=
      'Daniele’s smart and thoughtful approach showing small and extremely ' +
      'useful recipes was the best reading for me.';
    FieldByName('Reported').Value := EncodeDate(2018, 9, 28) +
      EncodeTime(1, 2, 21, 0);
    Post;
  end;
{$ENDREGION}
  Result := ds;
end;

end.
